---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "config-server"
spec:
  selector:
    matchLabels:
      app: "config-server"
  template:
    metadata:
      labels:
        app: "config-server"
    spec:
      containers:
        - name: "config-server-image"
          image: "docker.io/heritier004/ea-project:config-server"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: "config-server"
spec:
  selector:
    app: "config-server"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8888

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "service-discovery"
spec:
  selector:
    matchLabels:
      app: "service-discovery"
  template:
    metadata:
      labels:
        app: "service-discovery"
    spec:
      containers:
        - name: "service-discovery-image"
          image: "docker.io/heritier004/ea-project:service-discovery"
          imagePullPolicy: "Always"
          args: [ "--spring.profiles.active=k8s" ]
          ports:
            - containerPort: 8761
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]

---
apiVersion: v1
kind: Service
metadata:
  name: "service-discovery"
spec:
  type: NodePort
  selector:
    app: "service-discovery"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8761

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "api-gateway"
spec:
  selector:
    matchLabels:
      app: "api-gateway"
  template:
    metadata:
      labels:
        app: "api-gateway"
    spec:
      containers:
        - name: "api-gateway-image"
          image: "docker.io/heritier004/ea-project:api-gateway"
          imagePullPolicy: "Always"
          args: [ "--spring.profiles.active=k8s" ]
          ports:
            - containerPort: 4848
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: "service-discovery"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup service-discovery.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service-discovery; sleep 2; done" ]

---
apiVersion: v1
kind: Service
metadata:
  name: "api-gateway"
spec:
  type: NodePort
  selector:
    app: "api-gateway"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4848

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "rabbitmq-service"
spec:
  selector:
    matchLabels:
      app: "rabbitmq-service"
  template:
    metadata:
      labels:
        app: "rabbitmq-service"
    spec:
      containers:
        - name: "rabbitmq-service-image"
          image: "rabbitmq:3.9.11-management-alpine"
          imagePullPolicy: "Always"
          ports:
            - containerPort: 5672
---
apiVersion: v1
kind: Service
metadata:
  name: "rabbitmq-dashboard"
spec:
  type: NodePort
  selector:
    app: "rabbitmq-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 15672

---
apiVersion: v1
kind: Service
metadata:
  name: "rabbitmq-service"
spec:
  selector:
    app: "rabbitmq-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "users-service"
spec:
  selector:
    matchLabels:
      app: "users-service"
  template:
    metadata:
      labels:
        app: "users-service"
    spec:
      containers:
        - name: "users-service-image"
          image: "docker.io/heritier004/ea-project:users-service"
          args: [ "--spring.profiles.active=k8s" ]
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8181
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: "service-discovery"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup service-discovery.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service-discovery; sleep 2; done" ]
---
apiVersion: v1
kind: Service
metadata:
  name: "users-service"
spec:
  selector:
    app: "users-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "series-service"
spec:
  selector:
    matchLabels:
      app: "series-service"
  template:
    metadata:
      labels:
        app: "series-service"
    spec:
      containers:
        - name: "series-service-image"
          image: "docker.io/heritier004/ea-project:series-service"
          args: [ "--spring.profiles.active=k8s" ]
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8585
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: "service-discovery"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup service-discovery.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service-discovery; sleep 2; done" ]
---
apiVersion: v1
kind: Service
metadata:
  name: "series-service"
spec:
  selector:
    app: "series-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8585
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "comments-service"
spec:
  selector:
    matchLabels:
      app: "comments-service"
  template:
    metadata:
      labels:
        app: "comments-service"
    spec:
      containers:
        - name: "comments-service-image"
          image: "docker.io/heritier004/ea-project:comments-service"
          args: [ "--spring.profiles.active=k8s" ]
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8383
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: "service-discovery"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup service-discovery.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service-discovery; sleep 2; done" ]
---
apiVersion: v1
kind: Service
metadata:
  name: "comments-service"
spec:
  selector:
    app: "comments-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8383
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "movies-service"
spec:
  selector:
    matchLabels:
      app: "movies-service"
  template:
    metadata:
      labels:
        app: "movies-service"
    spec:
      containers:
        - name: "movies-service-image"
          image: "docker.io/heritier004/ea-project:movies-service"
          args: [ "--spring.profiles.active=k8s" ]
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8282
      initContainers:
        - name: "config-server"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: "service-discovery"
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup service-discovery.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for service-discovery; sleep 2; done" ]
---
apiVersion: v1
kind: Service
metadata:
  name: "movies-service"
spec:
  selector:
    app: "movies-service"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8282